#!/usr/bin/env python

import sys,os,string,re
from lxml import html,etree

namespaces = {"dc":"http://purl.org/dc/elements/1.1/"}

dcknown = [
    "title","creator","subject",
    "description","publisher",
    "contributor","date","type","format",
    "identifier","source","language","relation",
    "coverage","rights"
]

def get_text(node):
    textnodes = node.xpath(".//text()")
    s = string.join([text for text in textnodes])
    return re.sub(r'\s+',' ',s)

if len(sys.argv)<2:
    sys.stderr.write("merge Dublin Core metadata into hOCR header files\n\n")
    sys.stderr.write("usage: %s dc.xml hocr.html\n"%sys.argv[0])
    sys.exit(1)

dc_doc = etree.fromstring(open(sys.argv[1]).read())
hocr_doc = html.fromstring(open(sys.argv[2]).read())

### remove all existing META tags representing Dublin Core metadata

hocr_meta = hocr_doc.xpath("//head")
assert hocr_meta!=[]
hocr_meta = hocr_meta[0]

hocr_nodes = hocr_doc.xpath("//head//meta[starts-with(@name,'DC.')]")
for node in hocr_nodes:
    node.getparent().remove(node)

### find all the Dublin Core tags in the Dublin Core metadata

dc_nodes = dc_doc.xpath("//dc:*", namespaces=namespaces)
for node in dc_nodes:
    node_name = node.xpath('local-name()')
    if node_name in dcknown:
        name = 'DC.' + node_name
        value = get_text(node)
        value = re.sub("[\t\r\n'\"]"," ",value).strip()
        value = value[:500]
        # hnode = hocr_doc.importNode(node,1)
        hnode = etree.Element("meta")
        hnode.set("name",name)
        hnode.set("value",value)
        hocr_meta.append(hnode)

print(etree.tostring(hocr_doc, pretty_print=True))
